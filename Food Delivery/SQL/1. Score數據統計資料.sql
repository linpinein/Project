/**********************************************************************************************************************************************************************************
1. 觀察 Score 的分布狀況
**********************************************************************************************************************************************************************************/
CREATE VIEW Score_Stats																				-- 建立 Score分布 虛擬表，後面做分群時需用到統計數字							
	as
WITH Score_Dist as (
	SELECT
		Score,
		count(Score) as Score_Count,																-- 各個分數的數量
		round(count(Score) * 100.0 / sum(count(Score)) OVER () , 2) ||'%' as Score_Percentage		-- （各個分數的數量 / 全部分數加給來的數量）= 該分數占比
	FROM																								---因為要計算「每一筆分數佔全部的比例」，需要知道全體的總和
		TX_Restaurant																					--- 為了在每一行都能取得總和，需要用 window function
	GROUP by
		1
),

/**********************************************************************************************************************************************************************************
2. 找出 Score 的統計資料
**********************************************************************************************************************************************************************************/

Score_Rank as (
	SELECT
		Score,
		percent_rank() over (ORDER by Score) as S_Rank							-- 使用 percent_rank() 計算每筆 Score 在所有資料中的百分比位置（用於後續判斷四分位數）
	FROM																			--- 四分位數代表的是「在資料排序中，某筆資料落在哪個累積百分比位置」
		TX_Restaurant
),
Score_IQR as (
	SELECT
		round(avg(Score) , 2) as 'Avg',											-- 平均數
		min(Score) as 'Min',													-- min
		min(CASE WHEN S_Rank >= 0.25 THEN Score END) AS Q1,						-- 前面加 min 用意：條件 S_Rank >= 0.25 會選出多筆資料，為了取作為 Q1 的分數，只取其中最小的值
		min(CASE WHEN S_Rank >= 0.50 THEN Score END) AS Q2,						-- 同上
		min(CASE WHEN S_Rank >= 0.75 THEN Score END) AS Q3,						-- 同上
		max(Score) as 'Max'														-- max
	FROM 
		Score_Rank
)

/**********************************************************************************************************************************************************************************
3. 列出 Score 的統計資料
**********************************************************************************************************************************************************************************/

SELECT
	*
FROM
	Score_IQR;
